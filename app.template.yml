AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Parameters:
  EncryptedConsumerKey:
    Type: String
    Default: ''
    Description: Twitter API Consumer Key encrypted ciphertext blob as a base64-encoded string.
  EncryptedConsumerSecret:
    Type: String
    Default: ''
    Description: Twitter API Consumer Secret encrypted ciphertext blob as a base64-encoded string.
  EncryptedAccessToken:
    Type: String
    Default: ''
    Description: Twitter API Access Token encrypted ciphertext blob as a base64-encoded string.
  EncryptedAccessTokenSecret:
    Type: String
    Default: ''
    Description: Twitter API Access Token Secret ciphertext blob as a base64-encoded string.
  DecryptionKeyName:
    Type: String
    Default: invalid
    Description: KMS key name of the key used to encrypt the Twitter API parameters. Note, this must be just the key name (UUID), not the full key ARN. It's assumed the key is owned by the same account, in the same region as the app.
  PlaintextConsumerKey:
    Type: String
    Default: ''
    Description: Twitter API Consumer Key as plain text. Note, It is HIGHLY recommended to use EncryptedConsumerKey instead of this parameter. This parameter is only provided so this app can be used in regions where KMS is not supported.
  PlaintextConsumerSecret:
    Type: String
    Default: ''
    Description: Twitter API Consumer Secret as plain text. Note, It is HIGHLY recommended to use EncryptedConsumerSecret instead of this parameter. This parameter is only provided so this app can be used in regions where KMS is not supported.
  PlaintextAccessToken:
    Type: String
    Default: ''
    Description: Twitter API Access Token as plain text. Note, It is HIGHLY recommended to use EncryptedAccessToken instead of this parameter. This parameter is only provided so this app can be used in regions where KMS is not supported.
  PlaintextAccessTokenSecret:
    Type: String
    Default: ''
    Description: Twitter API Access Token Secret as plain text. Note, It is HIGHLY recommended to use EncryptedAccessTokenSecret instead of this parameter. This parameter is only provided so this app can be used in regions where KMS is not supported.
  SearchText:
    Type: String
    Description: Non-URL-encoded search text poller should use when querying Twitter Search API.
  TweetProcessorFunctionName:
    Type: String
    Description: Name of lambda function that should be invoked to process tweets. Note, this must be a function name and not a function ARN.
  PollingFrequencyInMinutes:
    Type: Number
    MinValue: 1
    Default: 1
    Description: Frequency in minutes to poll for more tweets.
  BatchSize:
    Type: Number
    MinValue: 1
    Default: 15
    Description: Max number of tweets to send to the TweetProcessor lambda function on each invocation.
  StreamModeEnabled:
    Type: String
    Default: false
    Description: If true, the app will remember the latest timestamp of the previous tweets found and only invoke the tweet processor function for newer tweets. If false, the app will be stateless and invoke the tweet processor function with all tweets found in each polling cycle.

Conditions:
  IsPollingFrequencyInMinutesSingular: !Equals [!Ref PollingFrequencyInMinutes, 1]

Resources:
  TwitterSearchPoller:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/aws-serverless-twitter-event-source-1.1.0-SNAPSHOT.jar
      Runtime: java8
      Handler: com.amazonaws.serverless.twittereventsource.lambda.TwitterSearchPollerHandler::handleRequest
      Tracing: Active
      MemorySize: 512
      Timeout: 60
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref TweetProcessorFunctionName
        - DynamoDBCrudPolicy:
            TableName: !Ref SearchCheckpoint
        - KMSDecryptPolicy:
            KeyId: !Ref DecryptionKeyName
      Environment:
        Variables:
          ENCRYPTED_CONSUMER_KEY: !Ref EncryptedConsumerKey
          ENCRYPTED_CONSUMER_SECRET: !Ref EncryptedConsumerSecret
          ENCRYPTED_ACCESS_TOKEN: !Ref EncryptedAccessToken
          ENCRYPTED_ACCESS_TOKEN_SECRET: !Ref EncryptedAccessTokenSecret
          PLAINTEXT_CONSUMER_KEY: !Ref PlaintextConsumerKey
          PLAINTEXT_CONSUMER_SECRET: !Ref PlaintextConsumerSecret
          PLAINTEXT_ACCESS_TOKEN: !Ref PlaintextAccessToken
          PLAINTEXT_ACCESS_TOKEN_SECRET: !Ref PlaintextAccessTokenSecret
          SEARCH_TEXT: !Ref SearchText
          SEARCH_CHECKPOINT_TABLE_NAME: !Ref SearchCheckpoint
          TWEET_PROCESSOR_FUNCTION_NAME: !Ref TweetProcessorFunctionName
          BATCH_SIZE: !Ref BatchSize
          STREAM_MODE_ENABLED: !Ref StreamModeEnabled
      Events:
        Timer:
          Type: Schedule
          Properties:
            Schedule: !If [IsPollingFrequencyInMinutesSingular, !Sub 'rate(${PollingFrequencyInMinutes} minute)', !Sub 'rate(${PollingFrequencyInMinutes} minutes)']

  SearchCheckpoint:
    Type: AWS::Serverless::SimpleTable

Outputs:
  TwitterSearchPollerFunctionName:
    Value: !Ref TwitterSearchPoller
    Export:
      Name: !Sub ${AWS::StackName}-TwitterSearchPollerFunctionName
  TwitterSearchPollerFunctionArn:
    Value: !GetAtt TwitterSearchPoller.Arn
    Export:
      Name: !Sub ${AWS::StackName}-TwitterSearchPollerFunctionArn
  SearchCheckpointTableName:
    Value: !Ref SearchCheckpoint
    Export:
      Name: !Sub ${AWS::StackName}-SearchCheckpointTableName
  SearchCheckpointTableArn:
    Value: !GetAtt SearchCheckpoint.Arn
    Export:
      Name: !Sub ${AWS::StackName}-SearchCheckpointTableArn
